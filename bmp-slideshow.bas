400   '	"bmp slideshow - michael cassera"410   cls :cursor off 420   header=alloc(1024)430   loadml()440   mlsource=$789A450   mlcall=$7800460   images=22470   bitmap on :bitmap clear 0490   dim hdr(13),dib(39)500   dim f$(images-1),list(images-1),picks(images-1)510   for n=0 to images-1520   read f$(n)530   next 532   loop=1535   while loop>0540   for n=0 to images-1550   picks(n)=images560   next 570   for n=0 to images-1575   pk=random(images)580   while picks(pk)<>images590   pk=random(images)610   wend 620   picks(pk)=0630   list(n)=pk640   next 800   for slide=0 to images-1810   file$="bitmaps/"+f$(list(slide))1080  cls :print 1100  bload file$,$400001110  memcopy $40000,54 to header1120  for n=0 to 131130  hdr(n)=peek(header+n)1140  next 1145  '	"reading the bitmap file header"1150  if (hdr(0)<>$42)|(hdr(1)<>$4D):print "Not a .BMP!":stop :endif 1160  bmp_size=hdr(2)+(256*hdr(3))+(65536*hdr(4))+(4294967296*hdr(5))1170  '	"header 6,7,8,9 reserved"1180  offset=hdr(10)+(256*hdr(11))+(65536*hdr(12))+(4294967296*hdr(13))1200  '	"reading the dib header"1210  for n=0 to 391220  dib(n)=peek(header+14+n)1230  next 1240  dib_size=dib(0)+(256*dib(1))+(65536*dib(2))+(4294967296*dib(3))1250  width=dib(4)+(256*dib(5))+(65536*dib(6))+(4294967296*dib(7))1260  height=dib(8)+(256*dib(9))+(65536*dib(10))+(4294967296*dib(11))1270  '	"planes 12,13"1280  bpp=dib(14)+(256*dib(15))1290  compr=dib(16)+(256*dib(17))+(65536*dib(18))+(4294967296*dib(19))1300  '	"image size 20,21,22,23"1310  '	"x pix/meter 24,25,26,27"1320  '	"y pix/meter 28,29,30,31"1330  colors=dib(32)+(256*dib(33))+(65536*dib(34))+(4294967296*dib(35))1340  '	"important colors 36,37,38,39"1342  err=01347  print "image number      ";slide+1;" of ";images;" pass ";loop1348  print "filename          ";file$1350  print "bitmap file size  ";bmp_size1351  print "pixel data offset ";offset1352  print "dib header size   ";dib_size1353  print "image width       ";width1354  print "image height      ";height1356  print "bits/plane        ";bpp1358  print "compression       ";compr1360  print "number of colors  ";colors1362  print 1364  print "Press any key now to quit!"1370  if (width<>320)|(height<>240) print "size error":err=1:endif 1380  if colors>256 print "color error":err=1:endif 1390  if err=1 then stop 1400  '	"load clut data"1410  memcopy $40000+14+dib_size,1024 to header1415  bitmap clear 01420  poke 1,11430  for n=0 to 10231440  poke $D000+n,peek(header+n)1450  next 1460  poke 1,01480  '	"move pixel data"1490  pokel mlsource,$40000+offset1500  call mlcall1520  if inkey$()<>""1522  bitmap off :cursor on :cls 1524  print :print "Done!"1526  end 1528  endif 1540  cls 1550  next 1558  loop=loop+11560  wend 1570  proc loadml()1572  for n=$7800 to $789F1574  read a:poke n,a1576  next 1578  endproc 1590  '	"ml code for memory copy"1600  data 169,192,141,157,120,169,42,1411601  data 158,120,169,2,141,159,120,721602  data 218,8,120,164,1,90,162,2401603  data 100,1,165,1,141,0,223,1731604  data 154,120,141,4,223,173,155,1201605  data 141,5,223,173,156,120,141,61606  data 223,173,157,120,141,8,223,1731607  data 158,120,141,9,223,173,159,1201608  data 141,10,223,169,64,141,12,2231609  data 169,1,141,13,223,156,14,2231610  data 169,129,141,0,223,173,1,2231611  data 48,251,156,0,223,24,173,1541612  data 120,105,64,141,154,120,173,1551613  data 120,105,1,141,155,120,173,1561614  data 120,105,0,141,156,120,56,1731615  data 157,120,233,64,141,157,120,1731616  data 158,120,233,1,141,158,120,1731617  data 159,120,233,0,141,159,120,2021618  data 208,134,104,133,1,40,250,1041619  data 88,96,0,0,0,0,0,01990  '	"image filenames"2000  data "starry-night.bmp","whistler.bmp","swing.bmp","sunday.bmp"2002  data "sisters.bmp","scream.bmp","rembrandt.bmp","popart.bmp"2004  data "nude.bmp","nighthawks.bmp","monet.bmp","monalisa.bmp"2006  data "modernscape.bmp","modern.bmp","miro.bmp","matthew.bmp"2008  data "kandinsky.bmp","girl.bmp","degas.bmp","david.bmp"2010  data "dance.bmp","dali.bmp"